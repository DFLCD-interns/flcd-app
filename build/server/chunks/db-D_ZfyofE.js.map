{"version":3,"file":"db-D_ZfyofE.js","sources":["../../../.svelte-kit/adapter-node/chunks/db.js"],"sourcesContent":["import pkg from \"pg\";\nconst { Pool } = pkg;\nconst pool = new Pool({\n  //store this in an env file!\n  user: \"postgres\",\n  host: \"localhost\",\n  database: \"flcdtest\",\n  password: \"password\",\n  port: 5432\n  // Default PostgreSQL port\n});\nconst table_names = [\n  \"approvals\",\n  \"base_requests\",\n  \"batches\",\n  \"childs\",\n  \"classes\",\n  \"class_requests\",\n  \"equipments\",\n  \"equipment_requests\",\n  \"sessions\",\n  \"transaction_log\",\n  \"users\",\n  \"user_types\",\n  \"venues\",\n  \"venue_requests\",\n  \"unavailable_slots\",\n  \"venue_reservations\"\n];\nasync function connectToDB() {\n  try {\n    const client = await pool.connect();\n    return client;\n  } catch (error) {\n    console.error(\"Error connecting to the database:\", error.message);\n    throw error;\n  }\n}\nasync function query(sqlQuery, args) {\n  try {\n    const client = await connectToDB();\n    const result = await client.query(sqlQuery, args);\n    client.release();\n    return {\n      success: true,\n      body: {\n        result\n      }\n    };\n  } catch (error) {\n    console.error(\"Error executing query:\", error.message);\n    throw error;\n  }\n}\nasync function getUsersDB() {\n  const result = await query(\"SELECT * FROM users\");\n  return result.body.result.rows;\n}\nasync function createUserDB(uuid, first_name, last_name, email, pw_hash, phone, student_number, course, department, access_level) {\n  const res = await query(\"INSERT INTO users (uuid, first_name, last_name, email, pw_hash, phone, student_number, course, department, access_level) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)\", [uuid, first_name, last_name, email, pw_hash, phone, student_number, course, department, access_level]);\n  return res;\n}\nasync function getUserPriv(sessionID) {\n  const res = await query(\"SELECT users.access_level FROM sessions JOIN users ON sessions.user_id = users.id WHERE sessions.session_id = $1\", [sessionID]);\n  return res.body.result.rows[0]?.access_level;\n}\nasync function authUserDB(email) {\n  const res = await query(\"SELECT * FROM users WHERE email = $1\", [email]);\n  return res.body.result.rows;\n}\nasync function createSessionDB(sessionid, userid) {\n  const res = await query(\"INSERT INTO sessions (session_id, user_id, last_used) VALUES ($1, $2, NOW())\", [sessionid, userid]);\n  return res;\n}\nasync function getUserFromSessionDB(sessionuuid) {\n  const res = await query(\"SELECT * FROM users JOIN sessions ON sessions.user_id = users.id WHERE sessions.session_id = $1\", [sessionuuid]);\n  return res.body.result.rows[0];\n}\nasync function getUserWithMatchingEmail(email) {\n  const res = await query(\"SELECT * FROM users WHERE email = $1\", [email]);\n  return res.body.result.rows;\n}\nasync function getUserWithMatchingSN(sn) {\n  const res = await query(\"SELECT * FROM users WHERE student_number = $1\", [sn]);\n  return res.body.result.rows;\n}\nasync function getUsersWithAccessLevel(access_level) {\n  const res = await query(\"SELECT * FROM users WHERE access_level = $1\", [access_level]);\n  return res.body.result.rows;\n}\nasync function getEquipmentDB() {\n  const result = await query(\"SELECT * FROM equipments\");\n  return result.body.result.rows;\n}\nasync function getEquipmentsStatusesDB() {\n  const result = await query(`\n    SELECT \n      equipments.id AS equip_id,\n      equipment_requests.id AS subreq_id,\n      equipment_requests.request_id AS req_id,\n      equipment_requests.promised_start_time AS promised_start_time,\n      equipment_requests.promised_end_time AS promised_end_time\n    FROM equipments \n    JOIN equipment_requests ON equipments.id = equipment_requests.equipment_id\n    GROUP BY promised_start_time, equip_id, subreq_id`);\n  return result.body.result.rows;\n}\nasync function getVenuesStatusesDB() {\n  const result = await query(`\n    SELECT \n      venues.id AS venue_id,\n      venue_requests.id AS subreq_id,\n      venue_requests.request_id AS req_id,\n      venue_requests.date_needed AS date,\n      venue_requests.start_time AS start,\n      venue_requests.end_time AS end\n    FROM venues \n    JOIN venue_requests ON venues.id = venue_requests.venue_id\n    GROUP BY date, start, venue_requests.end_time, venues.id, subreq_id`);\n  return result.body.result.rows;\n}\nasync function getChildsStatusesDB() {\n  const result = await query(`\n    SELECT \n      childs.id AS child_id,\n      class_requests.id AS subreq_id,\n      class_requests.request_id AS req_id,\n      class_requests.observe_date AS date,\n      class_requests.timeslot AS timeslot\n    FROM childs \n    JOIN class_requests ON childs.id = class_requests.assigned_child_id\n    GROUP BY date, timeslot, childs.id, subreq_id`);\n  return result.body.result.rows;\n}\nasync function getUsersListDB() {\n  const result = await query(`SELECT \n    id,\n    first_name,\n    last_name,\n    email,\n    phone,\n    student_number,\n    course,\n    department,\n    users.access_level,\n    user_types.description,\n    created\n    FROM users JOIN user_types on users.access_level = user_types.access_level`);\n  return result.body.result.rows;\n}\nasync function getUserTypesDB() {\n  const result = await query(\"SELECT * FROM user_types\");\n  return result.body.result.rows;\n}\nasync function getVenueDB() {\n  const result = await query(\"SELECT * FROM venues\");\n  return result.body.result.rows;\n}\nasync function getEquipmentTypesDB() {\n  const result = await query(\"SELECT type, COUNT(*) as count FROM equipments GROUP BY type\");\n  return result.body.result.rows;\n}\nasync function getUserBaseRequests(user) {\n  const res = await query(\"SELECT * FROM base_requests WHERE base_requests.requester_id = $1\", [user]);\n  return res.body.result.rows;\n}\nasync function getRequestDetailsDB(table, reqid) {\n  const qText = `SELECT \n    requester.first_name AS requester_firstname,\n    requester.last_name AS requester_lastname,\n    requester.email,\n    requester.student_number AS studentno,\n    requester.phone AS contactno,\n    requester.department AS dept,\n    faculty.first_name AS admin_firstname,\n    faculty.last_name AS admin_lastname,\n    faculty.email AS adminemail\n    ${table === \"equipment_requests\" ? `, t.location AS location, \n         t.actual_start_time AS actual_start_time,\n         t.promised_end_time AS promised_end_time,\n         e.name as equipment_name,\n         e.location as equipment_location` : \"\"}\n    ${table === \"class_requests\" ? `, t.timeslot AS timeslot,\n         c.name as child_name` : \"\"} \n    FROM base_requests br \n    LEFT JOIN ${table} t ON br.id = t.request_id\n    LEFT JOIN users AS faculty ON br.instructor_id = faculty.id\n    LEFT JOIN users AS requester ON br.requester_id = requester.id\n    ${table === \"class_requests\" ? \"LEFT JOIN childs c ON t.assigned_child_id = c.id\" : \"\"}\n    ${table === \"equipment_requests\" ? \"LEFT JOIN equipments e ON t.equipment_id = e.id\" : \"\"}\n    WHERE br.id = ${reqid}`;\n  const res = await query(qText);\n  return res.body.result.rows;\n}\nasync function createBaseRequestDB2(purpose, requester_id, instructor_id) {\n  const res = await query(\"INSERT INTO base_requests (purpose, requester_id, instructor_id) VALUES ($1, $2, $3)\", [purpose, requester_id, instructor_id]);\n  return res;\n}\nasync function createClassRequestDB(class_id, request_id, timeslot, observe_date) {\n  await query(\"INSERT INTO class_requests (timeslot, class_id, request_id, observe_date) VALUES ($1, $2, $3, $4)\", [timeslot, class_id, request_id, observe_date]);\n}\nasync function getLatestBaseRequestID(user_id) {\n  const result = await query(\"SELECT id FROM base_requests WHERE requester_id = $1 ORDER BY created DESC LIMIT 1;\", [user_id]);\n  return result.body.result.rows[0]?.id;\n}\nasync function insertIntoTableDB(table_name, formData) {\n  if (!table_names.includes(table_name)) {\n    throw new Error(\"Trying to insert to non-existent table (possibly misidentified/mispelled/malicious injection)\", table_name);\n  }\n  const attributesText = [...formData.keys()].map((val) => val).join(\", \");\n  const values = [...formData.values()].map((val) => val);\n  const qText = `INSERT INTO ${table_name} (${attributesText}) VALUES (${[...values.map((_, index) => \"$\" + (index + 1))]})`;\n  const res = await query(qText, values);\n  return res;\n}\nasync function getFromTableDB(table_name, searchFormData, limit = 100) {\n  if (!table_names.includes(table_name)) {\n    throw new Error(\"Trying to get from non-existent table (possibly misidentified/mispelled/malicious injection)\", table_name);\n  } else if (limit < 0 || !Number.isInteger(limit)) {\n    throw new Error(\"Trying to get negative or non-Integer number of rows (possibly mistyped/malicious injection)\", limit);\n  }\n  const isFormData = Object.getPrototypeOf(searchFormData).append != void 0;\n  let qText = \"\";\n  const attributes = (isFormData ? [...searchFormData.keys()] : Object.keys(searchFormData)).map((val) => val);\n  const values = (isFormData ? [...searchFormData.values()] : Object.values(searchFormData)).map((val) => val);\n  values.forEach((val, i) => !val || val == \"undefined\" || val == \"null\" ? values[i] = 0 : \"\");\n  const whereText = attributes.map((attributeName, index) => `(${attributeName} = $${index + 1})`).join(\" AND \") || \"\";\n  if (table_name == \"user_types\") {\n    qText = `SELECT * FROM ${table_name} WHERE (1 = 1) ${whereText ? \"AND \" + whereText : \"\"} ORDER BY (access_level) asc LIMIT $${attributes.length + 1}`;\n  } else {\n    qText = `SELECT * FROM ${table_name} WHERE (1 = 1) ${whereText ? \"AND \" + whereText : \"\"} ORDER BY (id) asc LIMIT $${attributes.length + 1}`;\n  }\n  const res = await query(qText, values.concat(limit));\n  return res;\n}\nasync function updateTableDB(table_name, searchFormData, updateFormData) {\n  if (!table_names.includes(table_name)) {\n    throw new Error(\"Trying to update non-existent table (possibly misidentified/mispelled/malicious injection):\", table_name);\n  }\n  const searchAttributes = [...searchFormData.keys()].map((val) => val);\n  const updateAttributes = [...updateFormData.keys()].map((val) => val);\n  let searchValues = [...searchFormData.values()].map((val) => val === \"null\" || val === \"undefined\" ? null : val);\n  const updateValues = [...updateFormData.values()].map((val) => val === \"null\" || val === \"undefined\" ? null : val);\n  const setText = updateAttributes.map((attributeName, index) => `${attributeName} = $${index + 1}`).join(\", \");\n  const whereText = searchAttributes.map((attributeName, index) => `(${attributeName} ${searchValues[index] ? `= $${updateAttributes.length + index + 1}` : \"IS NULL\"})`).join(\" AND \");\n  searchValues = searchValues.filter((val) => val != null);\n  const qText = `UPDATE ${table_name}\n    SET ${setText}\n    WHERE ${whereText}`;\n  const res = await query(qText, updateValues.concat(searchValues));\n  return res;\n}\nasync function deleteFromTableDB(table_name, searchFormData) {\n  if (!table_names.includes(table_name)) {\n    throw new Error(\"Trying to update non-existent table (possibly misidentified/mispelled/malicious injection):\", table_name);\n  }\n  const searchAttributes = [...searchFormData.keys()].map((val) => val);\n  let searchValues = [...searchFormData.values()].map((val) => val === \"null\" ? null : val);\n  const whereText = searchAttributes.map((attributeName, index) => `(${attributeName} ${searchValues[index] ? `= $${index + 1}` : \"IS NULL\"})`).join(\" AND \");\n  searchValues = searchValues.filter((val) => val != null);\n  const qText = `DELETE FROM ${table_name}\n    WHERE ${whereText}`;\n  const res = await query(qText, searchValues);\n  return res;\n}\nasync function deleteRequest(request_table_name, request_id) {\n  const searchFormData = new FormData();\n  searchFormData.append(\"request_id\", request_id);\n  const result = await deleteFromTableDB(\"approvals\", searchFormData);\n  const result2 = await deleteFromTableDB(request_table_name, searchFormData);\n  searchFormData.delete(\"request_id\");\n  searchFormData.append(\"id\", request_id);\n  const result3 = await deleteFromTableDB(\"base_requests\", searchFormData);\n  return result?.success && result2?.success && result3?.success;\n}\nasync function getEquipmentRequestsDB() {\n  const res = await query(`SELECT equipment_requests.id AS req_id, * FROM base_requests JOIN equipment_requests ON equipment_requests.request_id = base_requests.id ORDER BY equipment_requests.id ASC`);\n  return res.body.result.rows;\n}\nasync function getVenueRequestsDB() {\n  const res = await query(`SELECT venue_requests.id AS req_id, * FROM base_requests JOIN venue_requests ON venue_requests.request_id = base_requests.id JOIN venues ON venue_requests.venue_id = venues.id ORDER BY venue_requests.id ASC`);\n  const res2 = await query(`SELECT venue_requests.id AS req_id, * FROM base_requests JOIN venue_requests ON venue_requests.request_id = base_requests.id ORDER BY venue_requests.id ASC`);\n  const ret = res.body.result.rows?.concat(\n    res2.body.result.rows?.filter(\n      (reqNoAssignedVenue) => {\n        if (reqNoAssignedVenue.venue_id) return false;\n        if (res.body.result.rows?.length === 0) return true;\n        return res.body.result.rows.some((reqWithAssignedVenue) => reqWithAssignedVenue.request_id === reqNoAssignedVenue.request_id && reqWithAssignedVenue.req_id !== reqNoAssignedVenue.req_id);\n      }\n    )\n  );\n  return ret;\n}\nasync function getClassRequestsDB() {\n  const res = await query(`SELECT class_requests.id AS req_id, * FROM base_requests JOIN class_requests ON class_requests.request_id = base_requests.id JOIN classes ON class_requests.class_id = classes.id ORDER BY class_requests.id ASC`);\n  return res.body.result.rows;\n}\nasync function getAllClassesDB() {\n  const res = await query(`SELECT\n    batches.id AS batch_id,\n    batches.name AS batch_name,\n    classes.id AS class_id,\n    classes.name AS class_name,\n    users.first_name AS handler_firstname,\n    users.last_name AS handler_lastname,\n    classes.schedule,\n    childs.name AS child_name,\n    childs.birthdate AS child_birthdate,\n    childs.tracking_id AS child_trackingid,\n    childs.created AS child_created\n    FROM batches JOIN classes ON batches.id = classes.batch_id \n    JOIN childs ON classes.id = childs.class_id \n    JOIN users ON classes.handler_id = users.id`);\n  return res.body.result.rows;\n}\nasync function getBatchesDB() {\n  const res = await query(`SELECT * FROM batches`);\n  return res.body.result.rows;\n}\nasync function getClassesDB() {\n  const res = await query(`SELECT * FROM classes`);\n  return res.body.result.rows;\n}\nasync function getBatchesAndClassesDB() {\n  const res = await query(`SELECT \n    classes.id AS class_id,\n    classes.name AS class_name,\n    classes.batch_id,\n    batches.name AS batch,\n    classes.handler_id AS handler_id,\n    users.first_name as handler_firstname,\n    users.last_name as handler_lastname,\n    classes.description,\n    classes.schedule,\n    classes.created\n    FROM classes \n    JOIN batches \n    ON classes.batch_id = batches.id\n    JOIN users\n    ON classes.handler_id = users.id\n    ORDER BY classes.id ASC`);\n  return res.body.result.rows;\n}\nasync function getSections(sched) {\n  const result = await query(\"SELECT * FROM classes WHERE schedule = $1\", [sched]);\n  return result.body.result.rows;\n}\nasync function getUnavailable() {\n  const result = await query(`SELECT class_id, timeslot, TO_CHAR(observe_date, 'YYYY-MM-DD') AS observe_date FROM unavailable_slots`);\n  return result.body.result.rows;\n}\nasync function getUnavailableWSection() {\n  const result = await query(`SELECT unavailable_slots.id, class_id, timeslot, TO_CHAR(observe_date, 'YYYY-MM-DD') AS observe_date,\n    classes.name AS name, classes.schedule AS schedule\n    FROM unavailable_slots\n    JOIN classes ON unavailable_slots.class_id = classes.id\n    ORDER BY observe_date, schedule, timeslot, name`);\n  return result.body.result.rows;\n}\nasync function addUnavailableSlot(class_id, observe_date, timeslot) {\n  await query(\"INSERT INTO unavailable_slots (timeslot, observe_date, class_id) VALUES ($1, $2, $3)\", [timeslot, observe_date, class_id]);\n}\nasync function deleteUnavailableSlot(id) {\n  await query(\"DELETE FROM unavailable_slots WHERE id = $1\", [id]);\n}\nexport {\n  getEquipmentRequestsDB as A,\n  getVenueRequestsDB as B,\n  getClassRequestsDB as C,\n  getFromTableDB as D,\n  getUserPriv as E,\n  getEquipmentsStatusesDB as F,\n  getVenueDB as G,\n  getVenuesStatusesDB as H,\n  getChildsStatusesDB as I,\n  getUserTypesDB as J,\n  createBaseRequestDB2 as K,\n  createClassRequestDB as L,\n  getRequestDetailsDB as M,\n  getUserFromSessionDB as a,\n  getUserBaseRequests as b,\n  getAllClassesDB as c,\n  deleteRequest as d,\n  getBatchesDB as e,\n  getClassesDB as f,\n  getEquipmentDB as g,\n  getBatchesAndClassesDB as h,\n  insertIntoTableDB as i,\n  getUsersDB as j,\n  getEquipmentTypesDB as k,\n  deleteFromTableDB as l,\n  addUnavailableSlot as m,\n  deleteUnavailableSlot as n,\n  getSections as o,\n  getUnavailable as p,\n  getUnavailableWSection as q,\n  getUsersListDB as r,\n  getUsersWithAccessLevel as s,\n  getUserWithMatchingEmail as t,\n  updateTableDB as u,\n  getLatestBaseRequestID as v,\n  getUserWithMatchingSN as w,\n  createUserDB as x,\n  authUserDB as y,\n  createSessionDB as z\n};\n"],"names":[],"mappings":"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"}